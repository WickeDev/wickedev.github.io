{"componentChunkName":"component---src-templates-post-template-tsx","path":"/blog/번역-Didact-자신만의-리액트를-만드는-DIY-가이드","result":{"pageContext":{"html":"<p><strong>[업데이트]</strong> 이 시리즈는 이전(old) 리액트(React) 아키텍처에서 시작 되었습니다. 여러분은 시작 부분을 건너뛰고 바로 <a href=\"https://velog.io/@wickedev/%EB%B2%88%EC%97%AD-Didact-%ED%8C%8C%EC%9D%B4%EB%B2%84-%EC%A0%90%EC%A7%84%EC%A0%81-%EC%9E%AC%EC%A1%B0%EC%A0%95\">새로운 파이버(Fiber) 아키텍처를 사용하여 모든 것을 재 작성하는 글</a>로 넘어갈 수 있습니다.</p>\n<p><strong>[업데이트 2]</strong> <a href=\"https://twitter.com/dan_abramov/status/969979721361641474\">댄(Dan)의 이야기에 진지하게 귀 기울일 것</a>:</p>\n<ol>\n<li>역자주 — 리덕스의 창시자이며, 2015년부터 페이스북에서 리액트 메인테이너로 활동</li>\n</ol>\n<p><img src=\"https://images.velog.io/post-images/wickedev/e90bf710-3434-11e9-81a2-293918534cca/-2019-02-19-7.54.40.png\" alt=\"Dan&#x27;s Twitter\"></p>\n<hr>\n<p>오래 전, 내가 자료 구조와 알고리즘을 배울 시절, 과제 중 하나는 나만의 어레이 리스트, 링크드 리스트, 큐와 스택 (모듈라-2 를 사용하여)을 작성하는 것 이였습니다. 그 때 이후로는 바퀴를 재 발명(Reinventing the Wheel)하지 않아도 라이브러리가 언제나 있었기 때문에, 저는 링크드 리스트를 구현할 필요가 없었습니다.</p>\n<p>할 가치가 있는 과제였냐고요? 물론입니다. 그것을 제 스스로 해봄으로써 많은 것을 배울 수 있었습니다. 각 데이터 구조를 올바르게 사용하는 방법과 데이터 구조를 선택하는 방법을 배웠습니다.</p>\n<p>이 포스트 시리즈들의 목적도 같습니다만, 리액트는 링크드 리스트 이상의 것이죠.</p>\n<p><img src=\"https://images.velog.io/post-images/wickedev/ed196900-3434-11e9-81a2-293918534cca/-2019-02-19-7.55.21.png\" alt=\"John Carmack Twitter\"></p>\n<blockquote>\n<p><em>존 카맥(John Carmack): 성능 및 장치 호환성이 명시적으로 목표가 아닌 경우 POSIX 커널 구현이 얼마나 작고 간단할까? (리액트도 비슷하지 않을까 합니다)</em></p>\n</blockquote>\n<p>운이 좋게도, 성능, 디버깅 능력, 이식성, 등등을 신경 쓰지 않는다면, 리액트의 주요한 서너 가지 기능은 재작성하기에 어렵지 않습니다. 실제로 그것은 꽤 간단하고 200 줄 이하의 코드로 작성 가능합니다.</p>\n<p>우리는 200줄 이하의 코드로, 같은 API를 가지며, 동작하는 버전의 리액트를 작성해 볼겁니다. 이 라이브러리의 교훈적인(Didactic)을 감안할 때 이것을 Didact(교훈)이라고 이름 붙였습니다.</p>\n<hr>\n<p>디닥트(Didact)를 사용한 어플리케이션의 코드는 아래와 같이 보여질 것 입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> stories <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Didact introduction\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://bit.ly/2pX7HNn\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Rendering DOM elements \"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://bit.ly/2qCOejH\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Element creation and JSX\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://bit.ly/2qGbw8S\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Instances and reconciliation\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://bit.ly/2q4A746\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Components and state\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://bit.ly/2rE16nh\"</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Didact<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Didact Stories<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n          <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>stories<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">story</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Story name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>story<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span> url<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>story<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Story</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Didact<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">likes</span><span class=\"token operator\">:</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">like</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">likes</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>likes <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> url <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> likes <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> likesElement <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>span <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">like</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>likes<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span>b<span class=\"token operator\">></span>❤️<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>b<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nDidact<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App stories<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>stories<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a href=\"https://gist.github.com/pomber/1cda77043b582514873292732ce78630#file-app-jsx\">Gist</a>, <a href=\"https://codepen.io/pomber/pen/RVqBrx?editors=0010\">Codepen</a></p>\n<p>실제로 이 코드는 시리즈를 진행하는 동안 사용할 샘플 앱의 코드입니다. 다음과 같이 보여(renders)집니다.</p>\n<p><img src=\"https://images.velog.io/post-images/wickedev/70d43cb0-3431-11e9-9675-b521414058f6/1vz5qsBa26KXSWJeitZ22NA.gif\" alt=\"Didact renders\"></p>\n<hr>\n<p>다음 처럼 게시물 하나에 하나씩 Didact에 기능을 추가 할 예정입니다.</p>\n<ul>\n<li><a href=\"https://velog.io/@wickedev/%EB%B2%88%EC%97%AD-Didact-DOM-%EC%9A%94%EC%86%8CElements-%EB%A0%8C%EB%8D%94%EB%A7%81%ED%95%98%EA%B8%B0\">DOM 엘리먼트 렌더링하기</a></li>\n<li><a href=\"https://engineering.hexacta.com/didact-element-creation-and-jsx-d05171c55c56\">엘리먼트 생성과 JSX</a> (번역중)</li>\n<li><a href=\"https://engineering.hexacta.com/didact-instances-reconciliation-and-virtual-dom-9316d650f1d0\">인스턴스(Instances), 재조정(Reconciliation)과 가상 DOM(virtual DOM)</a> (번역중)</li>\n<li><a href=\"https://engineering.hexacta.com/didact-components-and-state-53ab4c900e37\">컴포넌트(Component)와 상태(State)</a> (번역중)</li>\n<li><a href=\"https://velog.io/@wickedev/%EB%B2%88%EC%97%AD-Didact-%ED%8C%8C%EC%9D%B4%EB%B2%84-%EC%A0%90%EC%A7%84%EC%A0%81-%EC%9E%AC%EC%A1%B0%EC%A0%95\">파이버(Fiber): 점진적 재조정(Incremental Reconciliation)</a></li>\n</ul>\n<p>이 시리즈에서 다루지 않는 것들</p>\n<ul>\n<li>함수형 컴포넌트 (하지만 추가하기는 쉽습니다)</li>\n<li>컨텍스트(Context)</li>\n<li>라이프사이클 메서드들</li>\n<li><code class=\"language-text\">ref</code> 속성</li>\n<li><code class=\"language-text\">key</code>에 의한 재조정(Reconciliation)</li>\n<li>다른 렌더러 들 (오직 DOM 만 지원함)</li>\n<li>구형 브라우저 지원</li>\n</ul>\n<p>리액트 구현 세부 사항에 대한 정보는 <a href=\"https://facebook.github.io/react/contributing/implementation-notes.html\">구현 노트</a>와 <a href=\"https://medium.com/@zpao\">Paul O'Shannessy</a>의 <a href=\"https://www.youtube.com/watch?v=_MAD4Oly9yg\">발표</a> 혹은 <a href=\"https://github.com/facebook/react\">리액트</a> 저장소에서 찾을 수 있습니다.</p>\n<hr>\n<p>다른 포스트들도 기대 바랍니다. <a href=\"https://engineering.hexacta.com/\">미디엄</a> 혹은 <a href=\"https://twitter.com/pomber\">트위터</a>를 구독해주시면 다음 포스팅이 올라왔을 때 알림을 받으실 수 있습니다.</p>\n<p>읽어주셔서 감사합니다.</p>\n<hr>\n<p>저는 <a href=\"https://www.hexacta.com/?hil\">Hexacta</a>에서 여러가지를 만들고있습니다.\n아이디어가 있거나 저희를 도울 수 있다면 <a href=\"https://www.hexacta.com/contact/?hil\">연락</a>주세요.</p>\n<hr>\n<p><a href=\"https://engineering.hexacta.com/didact-learning-how-react-works-by-building-it-from-scratch-51007984e5c5\">출처</a>, <a href=\"https://github.com/pomber/didact\">소스코드</a></p>","title":"[번역] Didact: 자신만의 리액트를 만드는 DIY 가이드"}},"staticQueryHashes":[]}
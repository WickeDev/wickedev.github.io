{"version":3,"file":"component---src-pages-index-tsx-317ee59a13a54d40f961.js","mappings":"oPA8BaA,EAAuB,SAAH,GAAuC,IAA1BC,EAAC,EAARC,MAAUC,EAAK,EAALA,MAAUC,GAAK,YAC5D,OAAS,MAALH,GACOI,EAAAA,EAAAA,KAACC,EAAAA,EAAW,eACfJ,MAAQD,GAQJG,IAEQ,MAATD,GACAE,EAAAA,EAAAA,KAACC,EAAAA,EAAW,eACfH,MAAQA,GAQJC,IAIL,IACX,ECGA,EAtBkB,WAAM,MAChBG,GAAOC,EAAAA,EAAAA,gBAnCa,aAqC1B,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAAAC,SAAAA,EACLN,EAAAA,EAAAA,KAAAA,KAAAA,CAAIO,UAAU,qCAAoCD,SAAAA,mBAClDN,EAAAA,EAAAA,KAAAA,MAAAA,CAAKO,UAAU,kBAAiBD,SACf,QADeA,EAC7BJ,EAAKM,iBAAS,aAAdC,EAAgBC,MAAMC,KAAI,SAACC,GAAI,iBAC9BZ,EAAAA,EAAAA,KAACa,EAAAA,KAAI,CAAeC,GAAE,SAAWF,EAAKG,KAAOT,UAC3CF,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACT,UAAU,+DAA8DD,SAAAA,EAC5EN,EAAAA,EAAAA,KAACL,EAAG,CAACY,UAAU,SAASV,MAAqB,QAAhB,EAAEe,EAAKK,iBAAS,OAAiB,QAAjB,EAAdC,EAAgBC,uBAAe,WAAjB,EAAdC,EAAiCvB,SAChEG,EAAAA,EAAAA,KAAAA,KAAAA,CAAAM,SACGM,EAAKS,SAERrB,EAAAA,EAAAA,KAAAA,IAAAA,CAAAM,SAA4B,QAA5BA,EAAIM,EAAKU,2BAAmB,aAAxBC,EAA0BC,cANvBZ,EAAKa,GAQT,QAKjB,C","sources":["webpack://wickedev-blog/./src/components/GatsbyImageWrapper.tsx","webpack://wickedev-blog/./src/pages/index.tsx"],"sourcesContent":["import GatsbyImage, { GatsbyImageOptionalProps } from \"gatsby-image\";\nimport React from \"react\";\n\nexport interface FluidImage {\n    aspectRatio: number | null;\n    base64: string | null;\n    sizes: string | null;\n    src: string | null;\n    srcSet: string | null;\n}\n\n\nexport interface FixedObject {\n    width: number\n    height: number\n    src: string\n    srcSet: string\n    base64?: string | null\n    tracedSVG?: string | null\n    srcWebp?: string | null\n    srcSetWebp?: string | null\n    media?: string | null\n}\n\ninterface Props extends GatsbyImageOptionalProps {\n    fluid?: FluidImage | FluidImage[] | null;\n    fixed?: FixedObject | FixedObject[] | null;\n\n}\n\nexport const Img: React.FC<Props> = ({ fluid: f, fixed, ...props }) => {\n    if (f != null) {\n        return <GatsbyImage\n            fluid={(f as any) /*{\n                ...f,\n                aspectRatio: f.aspectRatio !== null ? f.aspectRatio : 1,\n                base64: f.base64 !== null ? f.base64 : \"\",\n                sizes: f.sizes !== null ? f.sizes : \"\",\n                src: f.src !== null ? f.src : \"\",\n                srcSet: f.srcSet !== null ? f.srcSet : \"\",\n            }*/}\n            {...props}\n        />\n    } else if (fixed != null) {\n        return <GatsbyImage\n            fixed={(fixed as any) /*{\n                ...f,\n                aspectRatio: f.aspectRatio !== null ? f.aspectRatio : 1,\n                base64: f.base64 !== null ? f.base64 : \"\",\n                sizes: f.sizes !== null ? f.sizes : \"\",\n                src: f.src !== null ? f.src : \"\",\n                srcSet: f.srcSet !== null ? f.srcSet : \"\",\n            }*/}\n            {...props}\n        />\n    }\n\n    return null;\n}\n\n","import { Card } from 'flowbite-react';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\nimport { Layout } from '../layouts/Layout';\nimport { Img } from '../components/GatsbyImageWrapper';\n\nconst LatestPostListQuery = graphql`\n  query MyAllPosts {\n    velogUser {\n      posts {\n        id\n        title\n        slug\n        thumbnail {\n          url\n          childImageSharp {\n            fluid(maxWidth: 480, maxHeight: 180) {\n              srcWebp\n              aspectRatio\n              base64\n              originalImg\n              originalName\n              presentationHeight\n              presentationWidth\n              sizes\n              src\n              srcSet\n              srcSetWebp\n              tracedSVG\n            }\n          }\n        }\n        childMarkdownRemark {\n          excerpt(truncate: true, pruneLength: 200)\n        }\n      }\n    }\n  }\n`;\n\nconst IndexPage = () => {\n  const data = useStaticQuery<Queries.MyAllPostsQuery>(LatestPostListQuery);\n\n  return (\n    <Layout>\n      <h2 className='text-3xl format dark:format-invert'>최근 작성한 게시글 목록</h2>\n      <div className=\"columns-2 gap-8\">\n        {data.velogUser?.posts.map((post) => (\n          <Link key={post.id} to={`/blog/${post.slug}`}>\n            <Card className='mb-8 break-inside-avoid format dark:format-invert max-w-none'>\n              <Img className='w-full' fluid={post.thumbnail?.childImageSharp?.fluid} />\n              <h3>\n                {post.title}\n              </h3>\n              <p>{post.childMarkdownRemark?.excerpt}</p>\n            </Card>\n          </Link>\n        ))}\n      </div>\n    </Layout>\n  );\n};\nexport default IndexPage\n"],"names":["Img","f","fluid","fixed","props","_jsx","GatsbyImage","data","useStaticQuery","_jsxs","Layout","children","className","velogUser","_data$velogUser","posts","map","post","Link","to","slug","Card","thumbnail","_post$thumbnail","childImageSharp","_post$thumbnail$child","title","childMarkdownRemark","_post$childMarkdownRe","excerpt","id"],"sourceRoot":""}